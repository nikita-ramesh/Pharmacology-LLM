Test Set Evaluation Results
==================================================
Total test queries executed: 0
Successful test queries: 0
None count: 0
None IDs: 
Empty count: 0
Empty IDs: 
==================================================

--- Processing Test Case 26 ---
Natural Language Query: What does the Guide to Pharmacology know about Voltage-gated ion channels?
Expected SQL: select o.object_id, o.name as name, string_agg(f.name, ' | ') as family from object o left join receptor2family rf on o.object_id=rf.object_id left join family f on rf.family_id=f.family_id where o.object_id in (select object_id from receptor2family where family_id in (WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%Voltage-gated ion channels%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id)) group by o.object_id, f.family_id;
Generated SQL: SELECT 
    o.object_id, 
    o.name AS channel_name, 
    o.comments AS channel_comments, 
    vg.physiological_ion, 
    vg.selectivity_comments, 
    vg.voltage_dependence_comments
FROM 
    object o
JOIN 
    vgic vg ON o.object_id = vg.object_id
WHERE 
    o.name ILIKE '%voltage-gated ion channel%' OR vg.physiological_ion IS NOT NULL;

Expected SQL Results:
     object_id               name                                             family
0          380  K<sub>Ca</sub>1.1  Calcium- and sodium-activated potassium channe...
1          381  K<sub>Ca</sub>2.1  Calcium- and sodium-activated potassium channe...
2          382  K<sub>Ca</sub>2.2  Calcium- and sodium-activated potassium channe...
3          383  K<sub>Ca</sub>2.3  Calcium- and sodium-activated potassium channe...
4          384  K<sub>Ca</sub>3.1  Calcium- and sodium-activated potassium channe...
..         ...                ...                                                ...
142        586  Na<sub>v</sub>1.9     Voltage-gated sodium channels (Na<sub>V</sub>)
143        746     H<sub>v</sub>1     Voltage-gated proton channel  (H<sub>v</sub>1)
144        747               RyR1                          Ryanodine receptors (RyR)
145        748               RyR2                          Ryanodine receptors (RyR)
146        749               RyR3                          Ryanodine receptors (RyR)

[147 rows x 3 columns]

Generated SQL Results:
     object_id  ...                voltage_dependence_comments
0          380  ...                                           
1          381  ...  K<sub>Ca</sub>2.1 is voltage independent.
2          382  ...  K<sub>Ca</sub>2.2 is voltage independent.
3          383  ...  K<sub>Ca</sub>2.3 is voltage independent.
4          384  ...  K<sub>Ca</sub>3.1 is voltage independent.
..         ...  ...                                        ...
140        586  ...                                           
141        746  ...                                       None
142        747  ...                                       None
143        748  ...                                       None
144        749  ...                                       None

[145 rows x 6 columns]

--- Processing Test Case 27 ---
Natural Language Query: What antimalarial ligands are approved drugs?
Expected SQL: select l.ligand_id, l.name, l.approved, l.in_gtmp from ligand l where l.in_gtmp is true and l.approved is true;
Generated SQL: SELECT DISTINCT l.ligand_id, l.name
FROM ligand l
JOIN vw_ligand_summary ls ON l.ligand_id = ls.ligand_id
JOIN vw_ligand_peptide_species vls ON l.ligand_id = vls.ligand_id
WHERE ls.approved = TRUE
AND vls.species_id IN (
    SELECT species_id 
    FROM species
    WHERE name ILIKE '%malaria%' OR scientific_name ILIKE '%Plasmodium%'
);

Expected SQL Results:
    ligand_id                name  approved  in_gtmp
0        9676           proguanil      True     True
1        9955          artemether      True     True
2        2342           quinidine      True     True
3        4252          mefloquine      True     True
4        4800       pyrimethamine      True     True
5        5535         chloroquine      True     True
6        6391          bortezomib      True     True
7        6464         doxycycline      True     True
8        9695          atovaquone      True     True
9        9957           artenimol      True     True
10       9969        lumefantrine      True     True
11      10018         amodiaquine      True     True
12      10019        halofantrine      True     True
13      10025         piperaquine      True     True
14       2510             quinine      True     True
15       7198  hydroxychloroquine      True     True
16       7489        panobinostat      True     True
17      10173         sulfadoxine      True     True
18      10916           mupirocin      True     True
19      10934             dapsone      True     True
20       6510        azithromycin      True     True
21       9722         tafenoquine      True     True
22       9956          artesunate      True     True
23      10607         clindamycin      True     True
24       9952          primaquine      True     True

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 28 ---
Natural Language Query: Find enzymes with endogenous substrates that have no pharmacology to speak of?
Expected SQL: select o.object_id, o.name from object o where o.object_id in (select distinct object_id from enzyme) and o.object_id in (select distinct object_id from endo_ligand_pairings) and o.object_id not in (select distinct object_id from interaction where object_id is not null and ((affinity_units != '-' and affinity_units is not null) or (original_affinity_units is not null and original_affinity_units != '-') or (concentration_range is not null and concentration_range != '-' and concentration_range != '')));
Generated SQL: SELECT DISTINCT e.object_id
FROM enzyme e
LEFT JOIN substrate s ON e.object_id = s.object_id
LEFT JOIN interaction i ON e.object_id = i.object_id
WHERE s.endogenous IS TRUE
AND i.interaction_id IS NULL;

Expected SQL Results:
   object_id                           name
0       3201  chymotrypsin like elastase 2A
1       1409                    PLC&delta;1
2       1404                     PLC&beta;2
3       1280             adenylyl cyclase 3
4       1285             adenylyl cyclase 8

Generated SQL Results:
   object_id
0       1262
1       1265
2       1270
3       1277
4       1390
5       1445
6       1626

--- Processing Test Case 29 ---
Natural Language Query: What ligands, not in human, interact with GABAB1
Expected SQL: select l.ligand_id, l.name, l.type, o.object_id, o.name, i.type, i.action,i.species_id  from interaction i, ligand l, object o where i.object_id in (select object_id from object where name ilike 'GABA<sub>B1</sub>') and i.ligand_id=l.ligand_id and i.object_id=o.object_id and i.species_id not in (select species_id from species where name = 'Human');
Generated SQL: SELECT DISTINCT l.name AS ligand_name, l.ligand_id
FROM interaction i
JOIN ligand l ON i.ligand_id = l.ligand_id
JOIN species s ON i.species_id = s.species_id
WHERE i.object_id = (
    SELECT object_id
    FROM object
    WHERE name = 'GABAB1'
) 
AND s.name != 'Homo sapiens';

Expected SQL Results:
    ligand_id                        name               type  ...        type        action species_id
0        1081                      3-APPA  Synthetic organic  ...     Agonist       Agonist          3
1        1064                (-)-baclofen  Synthetic organic  ...     Agonist  Full agonist          3
2        1072                   CGP 62349  Synthetic organic  ...  Antagonist    Antagonist          3
3        1067                        GABA         Metabolite  ...     Agonist  Full agonist          3
4        1068          2-hydroxy-saclofen  Synthetic organic  ...  Antagonist    Antagonist          3
5        1070                  CGP 54626A  Synthetic organic  ...  Antagonist    Antagonist          3
6        1071                  CGP 56999A  Synthetic organic  ...  Antagonist    Antagonist          3
7        1073                   CGP 64213  Synthetic organic  ...  Antagonist    Antagonist          3
8        1074                   CGP 71872  Synthetic organic  ...  Antagonist    Antagonist          3
9        1076  [<sup>125</sup>I]CGP 64213  Synthetic organic  ...  Antagonist    Antagonist          3
10       1077  [<sup>125</sup>I]CGP 71872  Synthetic organic  ...  Antagonist    Antagonist          3
11       1078                    saclofen  Synthetic organic  ...  Antagonist    Antagonist          3
12       1075                   SCH 50911  Synthetic organic  ...  Antagonist    Antagonist          3
13       1069                   CGP 35348  Synthetic organic  ...  Antagonist    Antagonist          3

[14 rows x 8 columns]

Generated SQL Results:
Empty DataFrame
Columns: [ligand_name, ligand_id]
Index: []

--- Processing Test Case 30 ---
Natural Language Query: How many antibodies with binding data are there in GtoPdb? 
Expected SQL: select count(distinct l.ligand_id) from interaction i, ligand l where ((i.affinity_units is not null and i.affinity_units != '-' and i.affinity_units != '') or (i.concentration_range is not null and i.concentration_range != '-' and i.concentration_range != '')) and i.ligand_id=l.ligand_id and l.type='Antibody';
Generated SQL: SELECT COUNT(DISTINCT l.ligand_id) AS antibody_count
FROM ligand l
JOIN interaction i ON l.ligand_id = i.ligand_id
WHERE l.type = 'Antibody';

Expected SQL Results:
   count
0    260

Generated SQL Results:
   antibody_count
0             345

--- Processing Test Case 31 ---
Natural Language Query: List all fatty acid binding proteins and their human gene identifiers
Expected SQL: select o.object_id, o.name, si.official_gene_id, si.gene_name from object o left join structural_info si on si.object_id=o.object_id where o.object_id in (select object_id from receptor2family where family_id in ((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%Fatty acid-binding proteins%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%Fatty acid-binding proteins%'))) and si.species_id in (select species_id from species where name = 'Human');
Generated SQL: SELECT p.name AS protein_name, g.gene_identifier
FROM protein p
JOIN gene_identifier g ON p.object_id = g.object_id
WHERE p.name ILIKE '%fatty acid binding protein%'
AND g.species_id = (SELECT species_id FROM species WHERE name = 'Homo sapiens');

Expected SQL Results:
    object_id                                      name official_gene_id gene_name
0        2533              fatty acid binding protein 3             3557     FABP3
1        2544               peripheral myelin protein 2             9117      PMP2
2        2546                 retinol binding protein 1             9919      RBP1
3        2549                 retinol binding protein 4             9922      RBP4
4        2529  cellular retinoic acid binding protein 1             2338    CRABP1
5        2530  cellular retinoic acid binding protein 2             2339    CRABP2
6        2548                 retinol binding protein 3             9921      RBP3
7        2531              fatty acid binding protein 1             3555     FABP1
8        2532              fatty acid binding protein 2             3556     FABP2
9        2545           retinaldehyde binding protein 1            10024     RLBP1
10       2534              fatty acid binding protein 4             3559     FABP4
11       2535              fatty acid binding protein 5             3560     FABP5
12       2538              fatty acid binding protein 9             3563     FABP9
13       2536              fatty acid binding protein 6             3561     FABP6
14       2547                 retinol binding protein 2             9920      RBP2
15       2550                 retinol binding protein 5            15847      RBP5
16       2551                 retinol binding protein 7            30316      RBP7
17       2537              fatty acid binding protein 7             3562     FABP7
18       2584             fatty acid binding protein 12            34524    FABP12

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 32 ---
Natural Language Query: Find synthetic organic ligands with a molecular weight less than 500
Expected SQL: select l.ligand_id, l.name, l.type, lp.molecular_weight from ligand l, ligand_physchem lp where l.ligand_id=lp.ligand_id and lp.molecular_weight < 500;
Generated SQL: SELECT ligand_id, name, molecular_weight
FROM ligand
JOIN ligand_physchem ON ligand.ligand_id = ligand_physchem.ligand_id
WHERE type = 'Synthetic organic' AND molecular_weight < 500;

Expected SQL Results:
      ligand_id           name               type  molecular_weight
0          1058    acetic acid         Metabolite         60.021129
1          6627    hexadecanal  Synthetic organic        240.245316
2          1640      naltriben  Synthetic organic        415.178358
3          6277   acetaldehyde         Metabolite         44.026215
4           427            CPX  Synthetic organic        236.127326
...         ...            ...                ...               ...
7745      12397  azidamfenicol  Synthetic organic        295.091669
7746      12637           EN67  Synthetic organic        278.279438
7747      12772      sutezolid  Synthetic organic        353.413402
7748      12921    sarecycline  Synthetic organic        487.503292
7749      12923    florfenicol  Synthetic organic        358.214688

[7750 rows x 4 columns]

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 33 ---
Natural Language Query: List chemical structures for BACE1 that have pAct > 7 and order these high to low
Expected SQL: select l.ligand_id, l.name, l.type, o.object_id, o.name, i.type, i.action, case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low else i.affinity_high end else i.affinity_median end as affinity, i.affinity_units from interaction i, ligand l, object o where i.object_id in (select object_id from object where name ilike '%BACE1%' or abbreviation ilike '%BACE1%') and i.ligand_id=l.ligand_id and i.object_id=o.object_id and case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low > 7 else i.affinity_high > 7  end else i.affinity_median > 7 end order by 8 desc;
Generated SQL: SELECT 
    l.ligand_id,
    l.name,
    ls.isomeric_smiles,
    ls.isomeric_standard_inchi,
    i.affinity_high AS pAct
FROM 
    interaction i
JOIN 
    ligand l ON i.ligand_id = l.ligand_id
JOIN 
    ligand_structure ls ON l.ligand_id = ls.ligand_id
JOIN 
    object o ON i.object_id = o.object_id
WHERE 
    o.name = 'BACE1' 
    AND i.affinity_high > 7
ORDER BY 
    i.affinity_high DESC;

Expected SQL Results:
    ligand_id                            name  ... affinity  affinity_units
0       11775     compound 6 [PMID: 34553947]  ...     9.89             pKi
1        9982    compound 15 [PMID: 25699151]  ...     9.52           pIC50
2        8699                    verubecestat  ...     9.47             pKi
3       10520                         AM-6494  ...     9.44           pIC50
4       10520                         AM-6494  ...     9.40           pIC50
5       10520                         AM-6494  ...     9.21           pIC50
6        9639                        AMG-8718  ...     9.15           pIC50
7        9831                     PF-06684511  ...     9.15           pIC50
8        9963                     atabecestat  ...     9.10             pKi
9        8698    compound 16 [PMID: 23412139]  ...     8.77             pKi
10       8699                    verubecestat  ...     8.76             pKi
11       6939                         AZ-4217  ...     8.74             pKi
12       7789                    lanabecestat  ...     8.66           pIC50
13      11751                    JNJ-67569762  ...     8.57           pIC50
14       6946  compound 11d  [PMID: 23981898]  ...     8.40           pIC50
15       9822                          NB-360  ...     8.30           pIC50
16       9197     compound 9 [PMID: 26937601]  ...     8.30             pKi
17       6950     compound 2 [PMID: 22911925]  ...     8.26           pIC50
18       9818                    elenbecestat  ...     8.15           pIC50
19       9943                     PF-06751979  ...     8.14           pIC50
20       8399    compound 13 [PMID: 23412139]  ...     8.11             pKi
21       9963                     atabecestat  ...     8.01           pIC50
22      12747                     umibecestat  ...     7.96           pIC50
23       6944                      oxazine 89  ...     7.92           pIC50
24       7854     compound J [PMID: 21907142]  ...     7.74           pIC50
25       6475                       LY2886721  ...     7.70           pIC50
26       7852        example 2 [WO2013004676]  ...     7.59           pIC50
27       6931                         AZD3839  ...     7.58             pKi
28       9821                       RO5508887  ...     7.52           pIC50
29       7804                          AZ3971  ...     7.52           pIC50

[30 rows x 9 columns]

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, name, isomeric_smiles, isomeric_standard_inchi, pact]
Index: []

--- Processing Test Case 34 ---
Natural Language Query: Find any endogenous substrates of decarboxylases?
Expected SQL: select l.ligand_id, l.name, l.type, o.object_id, o.name, s.endogenous  from substrate s, ligand l, object o where s.object_id in (select object_id from object where object_id in (select object_id from receptor2family where family_id in((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike 'decarboxylases') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike 'decarboxylases')))) and s.ligand_id=l.ligand_id and s.object_id=o.object_id;
Generated SQL: SELECT s.name AS substrate_name, o.name AS enzyme_name
FROM substrate s
JOIN enzyme e ON s.object_id = e.object_id
JOIN object o ON e.object_id = o.object_id
WHERE s.endogenous = true AND o.name ILIKE '%decarboxylase%';

Expected SQL Results:
    ligand_id                          name  ...                                  name  endogenous
0        4671        5-hydroxy-L-tryptophan  ...  L-Aromatic amino-acid decarboxylase         True
1         721                    L-arginine  ...             L-Arginine decarboxylase         True
2        1369               L-glutamic acid  ...         Glutamic acid decarboxylase 1        True
3        1369               L-glutamic acid  ...         Glutamic acid decarboxylase 2        True
4         717                  L-tryptophan  ...  L-Aromatic amino-acid decarboxylase         True
5        3639                      levodopa  ...  L-Aromatic amino-acid decarboxylase         True
6         725                   L-ornithine  ...               Ornithine decarboxylase        True
7        3309               L-aspartic acid  ...         Glutamic acid decarboxylase 1        True
8        3309               L-aspartic acid  ...         Glutamic acid decarboxylase 2        True
9        3310                   L-histidine  ...               Histidine decarboxylase        True
10       3638            phosphatidylserine  ...     Phosphatidylserine decarboxylase         True
11       4786         S-adenosyl methionine  ...   S-Adenosylmethionine decarboxylase         True
12       5219                   malonyl-CoA  ...             Malonyl-CoA decarboxylase        True
13       8611  Deuterium-substituted L-DOPA  ...  L-Aromatic amino-acid decarboxylase        False

[14 rows x 6 columns]

Generated SQL Results:
   substrate_name                           enzyme_name
0            None     diphosphomevalonate decarboxylase
1            None     diphosphomevalonate decarboxylase
2            None     diphosphomevalonate decarboxylase
3            None     diphosphomevalonate decarboxylase
4            None     diphosphomevalonate decarboxylase
5            None     diphosphomevalonate decarboxylase
6            None     diphosphomevalonate decarboxylase
7            None     diphosphomevalonate decarboxylase
8            None     diphosphomevalonate decarboxylase
9            None  L-Aromatic amino-acid decarboxylase 
10           None             L-Arginine decarboxylase 
11           None         Glutamic acid decarboxylase 1
12           None         Glutamic acid decarboxylase 2
13           None  L-Aromatic amino-acid decarboxylase 
14           None  L-Aromatic amino-acid decarboxylase 
15           None               Ornithine decarboxylase
16           None         Glutamic acid decarboxylase 1
17           None         Glutamic acid decarboxylase 2
18           None               Histidine decarboxylase
19           None     Phosphatidylserine decarboxylase 
20           None   S-Adenosylmethionine decarboxylase 
21           None             Malonyl-CoA decarboxylase
22           None     diphosphomevalonate decarboxylase
23           None     diphosphomevalonate decarboxylase
24           None     diphosphomevalonate decarboxylase
25           None     diphosphomevalonate decarboxylase
26           None     diphosphomevalonate decarboxylase
27           None     diphosphomevalonate decarboxylase

--- Processing Test Case 35 ---
Natural Language Query: Write an essay on endothelian receptors antagonists
Expected SQL: select f.family_id, f.name, g.overview, g.comments, i.text from family f left join grac_family_text g on g.family_id=f.family_id left join introduction i on i.family_id=f.family_id where f.name ilike ('%endothelin%');
Generated SQL: None

Expected SQL Results:
   family_id  ...                                               text
0         21  ...  <heading>General</heading><p>In mammals, the e...

[1 rows x 5 columns]

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 36 ---
Natural Language Query: What compounds, that are not approved drugs, have evidence of being used in clinical trials?
Expected SQL: select l.ligand_id, l.name from ligand l where l.ligand_id in (select distinct ligand_id from ligand2clinical_trial lct) and l.approved is false;
Generated SQL: SELECT DISTINCT ligand.ligand_id, ligand.name
FROM ligand
JOIN ligand2clinical_trial ON ligand.ligand_id = ligand2clinical_trial.ligand_id
JOIN clinical_trial ON ligand2clinical_trial.clinical_trial_id = clinical_trial.clinical_trial_id
WHERE ligand.approved = FALSE;

Expected SQL Results:
      ligand_id         name
0         12714        M8891
1         13314     RVT-1502
2         11232  camlipixant
3         12723   BMS-986202
4         11932   BMS-820132
...         ...          ...
1094      11789   laniquidar
1095      11801  reldesemtiv
1096      11830    donafenib
1097      12312   inclacumab
1098      12772    sutezolid

[1099 rows x 2 columns]

Generated SQL Results:
      ligand_id           name
0          9698      CEP-37440
1         12584     ACT-777991
2         10333      taladegib
3          9534  otenaproxesul
4         13340        HC-7366
...         ...            ...
1094      12196      sitokiren
1095      11714        AZD7624
1096      12961        TBI-166
1097      11232    camlipixant
1098      11613   ropsacitinib

[1099 rows x 2 columns]

--- Processing Test Case 37 ---
Natural Language Query: Find GPCR agnonists with pKi affinities greater than 10
Expected SQL: select distinct ligand_id from interaction where object_id in (select distinct object_id from object where object_id in (select distinct object_id from receptor2family rf where family_id in (select family_id from family where type in ('gpcr')))) and type ='Agonist' and affinity_units ='pKi' and affinity_median >10;
Generated SQL: SELECT 
    ligand_id, 
    ligand, 
    target_id, 
    target, 
    affinity_units, 
    affinity_high
FROM 
    vw_interaction_gpcr_dwld
WHERE 
    type = 'Agonist' 
    AND affinity_units = 'pKi' 
    AND affinity_high > 10;

Expected SQL Results:
    ligand_id
0          19
1         292
2         693
3         859
4         941
5        1141
6        1350
7        1351
8        1356
9        1469
10       1489
11       1504
12       1512
13       1513
14       1515
15       1527
16       1545
17       1551
18       1603
19       1683
20       2044
21       2046
22       2050
23       2052
24       7393
25       7671
26       7774
27       7775
28       7776
29       7780
30       7781
31       7923
32       8865
33       9006
34       9226
35      10040
36      10178
37      11691
38      12419

Generated SQL Results:
    ligand_id                                            ligand  ...  affinity_units affinity_high
0        1600                              &alpha;-neoendorphin  ...             pKi         10.20
1        1620                                       dynorphin A  ...             pKi         10.80
2        1620                                       dynorphin A  ...             pKi         10.30
3        1619                                dynorphin A-(1-13)  ...             pKi         10.70
4           4                                              5-CT  ...             pKi         10.30
5          25                                           S-14671  ...             pKi         10.50
6         670                                           JMV1116  ...             pKi         10.20
7         613                                      neuromedin B  ...             pKi         10.30
8         731                                            HU-210  ...             pKi         10.20
9         756                                              CCL3  ...             pKi         10.20
10        682                                       &beta;-CGRP  ...             pKi         11.00
11        836                                            CXCL11  ...             pKi         10.50
12       3592                                           galanin  ...             pKi         10.51
13       6129                                           galanin  ...             pKi         10.60
14       3593                                           galanin  ...             pKi         10.33
15       3593                                           galanin  ...             pKi         10.10
16       3593                                           galanin  ...             pKi         10.10
17       1283                                     kisspeptin-10  ...             pKi         10.40
18       1298                     melanin-concentrating hormone  ...             pKi         10.50
19       1294                                            S36057  ...             pKi         10.40
20       1294                                            S36057  ...             pKi         10.30
21       1343                                  2-iodo-melatonin  ...             pKi         11.00
22        198                                       agomelatine  ...             pKi         10.40
23       1343                                  2-iodo-melatonin  ...             pKi         10.30
24        198                                       agomelatine  ...             pKi         10.50
25       2087                                       hemokinin 1  ...             pKi         11.70
26       2098                                       substance P  ...             pKi         10.30
27       1686  [(pF)Phe<sup>4</sup>]N/OFQ-(1-13)-NH<sub>2</sub>  ...             pKi         11.32
28       1682                       N/OFQ-(1-13)-NH<sub>2</sub>  ...             pKi         10.40
29       1681                            nociceptin/orphanin FQ  ...             pKi         10.40
30       1989                                           relaxin  ...             pKi         10.20
31       2051                                         seglitide  ...             pKi         10.30
32       2019                                           SRIF-14  ...             pKi         10.50
33       2020                                           SRIF-28  ...             pKi         10.20
34       2054                                        vapreotide  ...             pKi         10.10
35       2008                                            CST-17  ...             pKi         10.20
36       2051                                         seglitide  ...             pKi         10.20
37       2020                                           SRIF-28  ...             pKi         10.30
38       1545            [Leu<sup>31</sup>,Pro<sup>34</sup>]NPY  ...             pKi         10.70
39       1513                            pancreatic polypeptide  ...             pKi         10.80
40       1512                            pancreatic polypeptide  ...             pKi         10.90
41       1512                            pancreatic polypeptide  ...             pKi         10.90
42       1511                            pancreatic polypeptide  ...             pKi         10.70

[43 rows x 6 columns]

--- Processing Test Case 38 ---
Natural Language Query: Find information on the clinical use of drugs targetting Glucagon receptors
Expected SQL: select distinct l.ligand_id, l.name, l.type, l.clinical_use from interaction i, ligand l, object o where i.object_id in (select object_id from object where object_id in (select object_id from receptor2family where family_id in((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%Glucagon receptor%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%Glucagon receptor%')))) and i.ligand_id=l.ligand_id and i.object_id=o.object_id;
Generated SQL: SELECT 
    l.ligand_id,
    l.name AS drug_name,
    l.clinical_use
FROM 
    ligand l
JOIN 
    interaction i ON l.ligand_id = i.ligand_id
JOIN 
    object o ON i.object_id = o.object_id
WHERE 
    o.name = 'Glucagon receptor'
    AND l.clinical_use IS NOT NULL;

Expected SQL Results:
     ligand_id  ...                                       clinical_use
0         7386  ...  Albiglutide is approved to treat type 2 diabet...
1        11429  ...  An overview of the SURPASS phase 3 clinical st...
2         3293  ...                                               None
3         3785  ...                                               None
4         9135  ...  MK-0893 has completed Phase 2 clinical trials ...
..         ...  ...                                                ...
97        1105  ...                                                   
98        1144  ...                                                   
99        6524  ...                                                   
100       1154  ...                                               None
101       1103  ...                                                   

[102 rows x 4 columns]

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, drug_name, clinical_use]
Index: []

--- Processing Test Case 39 ---
Natural Language Query: Which approved antibodies target ligands? 
Expected SQL: select l.ligand_id, l.name, l.type, l.approved from ligand l where l.type = 'Antibody' and l.approved is true and l.ligand_id in (select ligand_id from interaction where target_ligand_id is not null);
Generated SQL: SELECT ligand_id, name
FROM ligand
WHERE approved = TRUE AND type = 'antibody';

Expected SQL Results:
    ligand_id                name      type  approved
0        5004          infliximab  Antibody      True
1        7979         dinutuximab  Antibody      True
2       13085         adebrelimab  Antibody      True
3       12900           pozelimab  Antibody      True
4        8078         secukinumab  Antibody      True
5        8093       tildrakizumab  Antibody      True
6        8091          reslizumab  Antibody      True
7       13084        narlumosbart  Antibody      True
8        4860          adalimumab  Antibody      True
9        8298        idarucizumab  Antibody      True
10      12969          tarlatamab  Antibody      True
11       8717          evinacumab  Antibody      True
12      12790          crovalimab  Antibody      True
13      12962         sotatercept  Antibody      True
14       9292           burosumab  Antibody      True
15       6773         canakinumab  Antibody      True
16       6774  certolizumab pegol  Antibody      True
17       6885         ustekinumab  Antibody      True
18       6887           belimumab  Antibody      True
19       9846         mirikizumab  Antibody      True
20       6886           denosumab  Antibody      True
21       6884          eculizumab  Antibody      True
22       8325          aducanumab  Antibody      True
23      10492         envafolimab  Antibody      True
24      11341           naxitamab  Antibody      True
25      12202           lecanemab  Antibody      True
26      11420           faricimab  Antibody      True
27      12342         sugemalimab  Antibody      True
28       6771         bevacizumab  Antibody      True
29       6776           golimumab  Antibody      True
30       6779         ranibizumab  Antibody      True
31       7396          siltuximab  Antibody      True
32       7541          ixekizumab  Antibody      True
33       7685         mepolizumab  Antibody      True
34       7985          durvalumab  Antibody      True
35       7990        atezolizumab  Antibody      True
36       8001        tralokinumab  Antibody      True
37       8092         romosozumab  Antibody      True
38       8713        brolucizumab  Antibody      True
39       8735            avelumab  Antibody      True
40       8922        risankizumab  Antibody      True
41       8933         tezepelumab  Antibody      True
42       8967        galcanezumab  Antibody      True
43       9123        caplacizumab  Antibody      True
44       9295          emapalumab  Antibody      True
45       9208        fremanezumab  Antibody      True
46       9411         bimekizumab  Antibody      True
47      10168         ravulizumab  Antibody      True
48      10694         eptinezumab  Antibody      True
49      11182          concizumab  Antibody      True

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, name]
Index: []

--- Processing Test Case 40 ---
Natural Language Query: What antimalarial compounds are in the database?
Expected SQL: select ligand_id, name, gtmp_comments  from ligand where in_gtmp is true;
Generated SQL: SELECT drug_name
FROM adb_compound
WHERE moa_target_pathogen ILIKE '%malaria%';

Expected SQL Results:
     ligand_id                           name                                      gtmp_comments
0        11709    compound 1 [PMID: 33929818]                                                   
1        11822                   NCATS-SM3710                                                   
2        11958  compound 14a [WO2021155612A1]                                                   
3        10604   compound 2h [PMID: 30664827]                                                   
4        10614                         BCH070                                                   
..         ...                            ...                                                ...
131      10611                         GSK030  GSK030 has asexual blood stage activity, poten...
132      10616                       WEHI-842  Future progression of peptidomimetic <i>Plasmo...
133      11109                   TCMDC-135051  <b>Potential Target/Mechanism Of Action:</b> T...
134      11469                        BRD9185  <b>Potential Target/Mechanism Of Action:</b> B...
135      11704                      MMV688533  The compound was awarded <a href="https://www....

[136 rows x 3 columns]

Generated SQL Results:
    drug_name
0  LICA/WRAIR

--- Processing Test Case 41 ---
Natural Language Query: What are the selective antagonists for Leukotriene receptors and their affinities?
Expected SQL: select o.object_id, o.name as name, i.ligand_id, l.name, i.affinity_units,i.type,i.selective,case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low else i.affinity_high end else i.affinity_median end as affinity from object o, interaction i, ligand l where o.object_id in (select object_id from receptor2family where family_id in ((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%Leukotriene receptors%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%Leukotriene receptors%'))) and o.object_id=i.object_id and ((i.affinity_units is not null and i.affinity_units != '-' and i.affinity_units != '') or (i.concentration_range is not null and i.concentration_range != '-' and i.concentration_range != '')) and i.ligand_id=l.ligand_id and i.type='Antagonist' and i.selectivity='Selective';
Generated SQL: SELECT
    o.name AS receptor_name,
    l.name AS ligand_name,
    i.affinity_high,
    i.affinity_median,
    i.affinity_low,
    i.affinity_units
FROM
    interaction i
JOIN
    object o ON i.object_id = o.object_id
JOIN
    ligand l ON i.ligand_id = l.ligand_id
WHERE
    o.name ILIKE '%Leukotriene%' -- Ensure the receptor is for Leukotriene
    AND i.type = 'antagonist'
    AND i.selective = TRUE;

Expected SQL Results:
    object_id                        name  ligand_id  ...        type selective affinity
0         269  CysLT<sub>1</sub> receptor       3358  ...  Antagonist     False     9.70
1         269  CysLT<sub>1</sub> receptor       3340  ...  Antagonist     False     8.55
2         270  CysLT<sub>2</sub> receptor       6196  ...  Antagonist      True     8.30
3         270  CysLT<sub>2</sub> receptor       6197  ...  Antagonist     False     7.42
4         270  CysLT<sub>2</sub> receptor       6196  ...  Antagonist      True     8.40
5         269  CysLT<sub>1</sub> receptor       6193  ...  Antagonist      True     8.10
6         223                        FPR2       1030  ...  Antagonist      True     6.00
7         269  CysLT<sub>1</sub> receptor       6193  ...  Antagonist     False     7.97
8         269  CysLT<sub>1</sub> receptor      10346  ...  Antagonist     False     8.00
9         269  CysLT<sub>1</sub> receptor      10581  ...  Antagonist      True     9.00
10        269  CysLT<sub>1</sub> receptor       3322  ...  Antagonist      True     8.90
11        269  CysLT<sub>1</sub> receptor       3329  ...  Antagonist     False     8.70
12        223                        FPR2       1040  ...  Antagonist      True     6.64
13        269  CysLT<sub>1</sub> receptor       3322  ...  Antagonist      True     8.74
14        269  CysLT<sub>1</sub> receptor       3327  ...  Antagonist     False     8.30
15        267    BLT<sub>1</sub> receptor       3325  ...  Antagonist     False     6.40
16        267    BLT<sub>1</sub> receptor       3368  ...  Antagonist     False     8.10
17        271                OXE receptor       6171  ...  Antagonist     False     6.30
18        267    BLT<sub>1</sub> receptor       6154  ...  Antagonist     False     8.80
19        270  CysLT<sub>2</sub> receptor       6196  ...  Antagonist      True     7.28
20        268    BLT<sub>2</sub> receptor       3351  ...  Antagonist      True     7.10
21        269  CysLT<sub>1</sub> receptor       3340  ...  Antagonist     False     8.64

[22 rows x 8 columns]

Generated SQL Results:
Empty DataFrame
Columns: [receptor_name, ligand_name, affinity_high, affinity_median, affinity_low, affinity_units]
Index: []

--- Processing Test Case 42 ---
Natural Language Query: What is known about Opioid delta receptor agonists?
Expected SQL: select l.ligand_id, l.name, l.type, o.object_id, o.name, i.type, i.action, i.affinity_units from interaction i, ligand l, object o where i.object_id in (select object_id from object where object_id in (select object_id from receptor2family where family_id in ((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%opioid receptor%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%opioid receptor%')))) and i.type='Agonist' and i.ligand_id=l.ligand_id and i.object_id=o.object_id and o.name ilike '%delta%';
Generated SQL: SELECT
    o.name AS receptor_name,
    l.ligand_id,
    l.name AS ligand_name,
    i.type AS interaction_type,
    i.action AS interaction_action,
    i.affinity_units,
    i.affinity_high,
    i.affinity_median,
    i.affinity_low,
    i.assay_description
FROM
    interaction i
JOIN
    ligand l ON i.ligand_id = l.ligand_id
JOIN
    object o ON i.object_id = o.object_id
WHERE
    o.name ILIKE '%Opioid delta receptor%'
    AND i.type = 'Agonist';

Expected SQL Results:
    ligand_id                          name  ...           action  affinity_units
0        1625                     etorphine  ...     Full agonist             pKi
1        1607                         DADLE  ...     Full agonist             pKi
2        1612  [<sup>3</sup>H]diprenorphine  ...     Full agonist             pKi
3        1618              dynorphin-(1-11)  ...     Full agonist             pKi
4        1615                 deltorphin II  ...     Full agonist             pKi
..        ...                           ...  ...              ...             ...
60       9005                   AR-M1000390  ...          Agonist           pIC50
61       9006                       UFP-512  ...          Agonist             pKi
62       9294                       BU08028  ...  Partial agonist             pKi
63       8866                  cebranopadol  ...          Agonist             pKi
64      13395                     atoxifent  ...          Agonist           pEC50

[65 rows x 8 columns]

Generated SQL Results:
Empty DataFrame
Columns: [receptor_name, ligand_id, ligand_name, interaction_type, interaction_action, affinity_units, affinity_high, affinity_median, affinity_low, assay_description]
Index: []

--- Processing Test Case 43 ---
Natural Language Query: What compounds have a role in treating arthritis?
Expected SQL: select idl.ligand_id, l.name, idl.comment, d.name from immuno_disease2ligand idl, ligand l, disease d where idl.disease_id in (select disease_id from disease where name ilike '%arthritis%' union select disease_id from disease2synonym where synonym ilike '%arthritis%') and idl.ligand_id=l.ligand_id and d.disease_id=idl.disease_id;
Generated SQL: SELECT DISTINCT l.ligand_id, l.name
FROM ligand l
JOIN drug2disease d2d ON l.ligand_id = d2d.ligand_id
JOIN disease ds ON d2d.disease_id = ds.disease_id
WHERE ds.name ILIKE '%arthritis%';

Expected SQL Results:
     ligand_id          name                                            comment                  name
0          422  piclidenoson   Clinical candidate for RA (Phase 2 NCT01034306).  Rheumatoid arthritis
1          422  piclidenoson  Clinical candidate for OA of the knee (Phase 2...        Osteoarthritis
2         4820    fenoprofen  Approved NSAID used for many inflammatory cond...        Osteoarthritis
3         4860    adalimumab  Anti-TNF&alpha; monoclonal antibody therapy ap...  Rheumatoid arthritis
4         5668   doramapimod                 Phase 2 clinical candidate for RA.  Rheumatoid arthritis
..         ...           ...                                                ...                   ...
174      10370     namilumab  Phase 2 clinical candidate for RA: namilumab h...  Rheumatoid arthritis
175       4998          IL-6  IL-6 is known to drive arthritic inflammation ...  Rheumatoid arthritis
176      10464  elsubrutinib                          Clinical candidate for RA  Rheumatoid arthritis
177       9559  ritlecitinib  Phase 2 clinical candidate for RA (NCT02969044...  Rheumatoid arthritis
178      12917     ABBV-3373                   Investugational treatment for RA  Rheumatoid arthritis

[179 rows x 4 columns]

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, name]
Index: []

--- Processing Test Case 44 ---
Natural Language Query: Find all the papers in the Guide that are listed as preprints (useful for housekeeping)
Expected SQL: select * from reference where pub_status ilike '%preprint%' or pub_status ilike '%pre-print%';
Generated SQL: SELECT *
FROM reference
WHERE pub_status = 'Preprint';

Expected SQL Results:
    reference_id  ...                               article_title_vector
0          41957  ...  'class':6 'coronavirus':15 'design':2 'diseas'...
1          42064  ...  '2':12 'block':8 'cell':24 'class':3 'cov':11,...
2          42139  ...  '2':5 'associ':7 'b.1.617':12 'cleavag':16 'co...
3          42140  ...        'complet':2 'genom':7 'human':6 'sequenc':3
4          42305  ...  'design':8 'drug':7 'fashion':3 'hype':5 'rati...
..           ...  ...                                                ...
60         46152  ...  'analysi':5 'associ':4 'cardiomyopathi':14 'di...
61         46304  ...  'activ':3 'amelior':4 'diseas':9 'model':10 'p...
62         47293  ...  '2':6 'cov':5 'discoveri':1 'efficaci':14 'inf...
63         47301  ...  'class':7 'degrad':10 'discoveri':1 'first':5 ...
64         47330  ...  'cancer':15 'control':7 'g12c':6 'growth':9 'i...

[65 rows x 31 columns]

Generated SQL Results:
    reference_id  ...                               article_title_vector
0          41957  ...  'class':6 'coronavirus':15 'design':2 'diseas'...
1          42064  ...  '2':12 'block':8 'cell':24 'class':3 'cov':11,...
2          42139  ...  '2':5 'associ':7 'b.1.617':12 'cleavag':16 'co...
3          42140  ...        'complet':2 'genom':7 'human':6 'sequenc':3
4          42305  ...  'design':8 'drug':7 'fashion':3 'hype':5 'rati...
5          42307  ...  '-19':18 '646':7 '756':6 'ace2':14 'analysi':4...
6          42436  ...  'ancestri':7 'ethnic':5 'genet':10 'human':9 '...
7          43104  ...  '2':12 'cov':11 'coval':8 'discoveri':3 'inhib...
8          43176  ...  'cell':11 'complementari':7 'express':4 'gene'...
9          43257  ...  '-7831':7 '-7832':10 '2':23 'activ':18 'antibo...
10         43285  ...  '2':14 'analog':7 'cov':13 'efficaci':2 'mice'...
11         43491  ...  '2':10 'bebtelovimab':4 'cov':9 'cov1404':3 'l...
12         43566  ...  'antimalari':8 'character':2 'mmv693183':10 'p...
13         43586  ...  '2':10 'cov':9 'emerg':1 'mrnas':5 'new':3 'sa...
14         43722  ...  '2':23 'barrier':14 'bioavail':10 'blood':12 '...
15         43725  ...  'agonist':9 'artifici':16 'base':13 'clinic':7...
16         43741  ...  '2':8 'cov':7 'determin':4 'di':19 'di-ubiquit...
17         43993  ...  'activ':11 'inhibitor':5 'magl':10 'modul':8 '...
18         44179  ...  '16':8 '2':4 'cov':3 'evad':10 'ifit1':13 'ifi...
19         44290  ...  '-19':19 '2':7,11 '2019':17 'acut':3 'coronavi...
20         38959  ...  'block':5 'ciclesonid':4 'coronavirus':6 'cort...
21         38968  ...  '-19':6 'covid':5 'discoveri':9 'inhibitor':12...
22         38976  ...  '2':4 'airway':19 'cell':16 'ciliat':15 'cov':...
23         38993  ...  '2':16 'candid':6 'cell':19 'cov':15 'drug':7 ...
24         39775  ...  'activ':5 'ebselen':1 'high':4 'inhibitor':6 '...
25         39786  ...  '-19':10 'compassion':1 'covid':9 'opaganib':4...
26         39886  ...  'coronavirida':10 'coronaviridae-host':9 'coro...
27         39887  ...  'assay':10 'coupl':7 'crude':13 'function':11 ...
28         39888  ...  '2':12 'antibodi':6 'cov':11 'declin':4 'evalu...
29         40144  ...  '2':11 'cov':10 'high':6 'inhibitor':14 'main'...
30         40737  ...  'bind':6 'disrupt':3 'genet':1 'human':4 'medi...
31         40747  ...  'disrupt':4 'genet':2 'hippocamp':13 'human':1...
32         40802  ...  '-19':21 '-527':2 '2':14 'cov':13 'covid':20 '...
33         40886  ...  '-19':2 '2':13 'comput':6 'cov':12 'covid':1 '...
34         40885  ...  '2':10 'combin':15 'comput':21 'cov':9 'covid'...
35         41014  ...  '-19':10 'biobank':15 'covid':9 'data':16 'gen...
36         41114  ...  '2':12 'ace2':22 'acut':8 'ambroxol':1 'bind':...
37         40982  ...  '-19':12 'catalyz':7 'covid':11 'driven':10 'i...
38         41361  ...  '-19':7 'across':15 'cell':11 'cellular':2 'ce...
39         41376  ...  '2':4 'abl':16 'contagi':10 'cov':3 'evolut':8...
40         41450  ...  '2':11 'contact':7 'cov':10 'direct':6 'ferret...
41         41576  ...  '2':11 'ace2':3 'ace2-mediated':2 'angiotensin...
42         41734  ...  '-19':9 'common':2 'covid':8 'protect':5 'seve...
43         39652  ...  '-19':4 'add':13 'add-on':12 'clinic':15 'conc...
44         39655  ...  '2':4 'cd147':13 'cd147-spike':12 'cell':7 'co...
45         44501  ...  'activ':12,17 'aldrich':8 'anti':15 'anti-tumo...
46         44587  ...  'basi':2 'human':8 'odor':4,9 'receptor':10 'r...
47         44720  ...  'cohort':12 'compon':4 'diseas':8 'herit':3 'm...
48         44723  ...  'artifact':14 'assess':5 'compound':15 'comput...
49         45473  ...  'degrad':3 'e2':5 'protein':2 'recruit':6 'tar...
50         45580  ...  'b':7 'cbl':6 'cbl-b':5 'inhibit':8 'inhibitor...
51         45641  ...  'determin':11 'encod':3 'fetal':2 'fetally-enc...
52         46041  ...  'amyloid':5 'compon':7 'disord':16 'drug':10 '...
53         46131  ...  'activ':8 'caus':17 'cns':5 'dnl343':1 'effect...
54         46152  ...  'analysi':5 'associ':4 'cardiomyopathi':14 'di...
55         46304  ...  'activ':3 'amelior':4 'diseas':9 'model':10 'p...
56         47293  ...  '2':6 'cov':5 'discoveri':1 'efficaci':14 'inf...
57         47330  ...  'cancer':15 'control':7 'g12c':6 'growth':9 'i...

[58 rows x 31 columns]

--- Processing Test Case 45 ---
Natural Language Query: Are there compounds which can block all adenosine, muscarinic, LPA, cannabinoid or dopamine receptors? Originally: Are there compounds which can block all adenosine (muscarinic, LPA, cannabinoid, dopamine) receptors?  
Expected SQL: select i.ligand_id, l.name, count(distinct i.object_id) as targets, f.name from interaction i, ligand l, family f, receptor2family r2f where i.object_id in (select object_id from receptor2family where family_id in((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where (name ilike '%Adenosine receptors%' OR name ilike '%Acetylcholine receptors \(muscarinic\)%' OR name ilike '%Cannabinoid receptors%' OR name ilike '%Dopamine receptors%' or name ilike '%Lysophospholipid (LPA) receptors%')) UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where (name ilike '%Adenosine receptors%' OR name ilike '%Acetylcholine receptors \(muscarinic\)%' OR name ilike '%Cannabinoid receptors%' OR name ilike '%Dopamine receptors%' or name ilike '%Lysophospholipid (LPA) receptors%')))) and i.type in ('Channel blocker','Gating inhibitor','Inhibitor','Antagonist') and i.ligand_id=l.ligand_id and i.object_id=r2f.object_id and r2f.family_id=f.family_id group by i.ligand_id, l.name, f.name, f.family_id having count(distinct i.object_id) = (select count(distinct object_id) from object where object_id in (select object_id from receptor2family where family_id in((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (f.family_id) UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (f.family_id)))) order by f.name,l.name;
Generated SQL: WITH receptor_objects AS (
    SELECT object_id
    FROM object
    WHERE name ILIKE '%adenosine%' 
       OR name ILIKE '%muscarinic%'
       OR name ILIKE '%LPA%'
       OR name ILIKE '%cannabinoid%'
       OR name ILIKE '%dopamine%'
),
blocking_interactions AS (
    SELECT DISTINCT ligand_id
    FROM interaction
    WHERE object_id IN (SELECT object_id FROM receptor_objects)
      AND action ILIKE '%block%'
)
SELECT l.ligand_id, l.name
FROM ligand l
WHERE l.ligand_id IN (
    SELECT ligand_id
    FROM blocking_interactions
    GROUP BY ligand_id
    HAVING COUNT(DISTINCT object_id) = (SELECT COUNT(object_id) FROM receptor_objects)
);

Expected SQL Results:
    ligand_id                                 name  targets                                  name
0       10104                      (S)-dimetindene        5  Acetylcholine receptors (muscarinic)
1         317  [<sup>3</sup>H]N-methyl scopolamine        5  Acetylcholine receptors (muscarinic)
2         318                   [<sup>3</sup>H]QNB        5  Acetylcholine receptors (muscarinic)
3         308                     <i>p</i>-F-HHSiD        5  Acetylcholine receptors (muscarinic)
4         307                               4-DAMP        5  Acetylcholine receptors (muscarinic)
..        ...                                  ...      ...                                   ...
72         62                       (+)-butaclamol        5                    Dopamine receptors
73         83                       chlorpromazine        5                    Dopamine receptors
74         38                            clozapine        5                    Dopamine receptors
75         86                          haloperidol        5                    Dopamine receptors
76         99                            spiperone        5                    Dopamine receptors

[77 rows x 4 columns]

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 46 ---
Natural Language Query: What should I use to inhibit TRPM3 in cultured cells, and at what concentration?  
Expected SQL: select l.ligand_id, l.name, case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low else i.affinity_high end else i.affinity_median end as affinity, i.affinity_units, i.type, i.action from ligand l, interaction i where i.object_id in (select object_id from object where object_id in (select object_id from receptor2family where family_id in (select family_id from family where name ilike '%TRPM3%')) union select object_id from object where name ilike '%TRPM3%') and l.ligand_id=i.ligand_id and i.type in ('Channel blocker','Gating inhibitor','Inhibitor','Antagonist') and ((i.affinity_units is not null and i.affinity_units != '-' and i.affinity_units != '') or (i.concentration_range is not null and i.concentration_range != '-' and i.concentration_range != ''));
Generated SQL: SELECT i.ligand_id, l.name AS ligand_name, i.affinity_units, i.affinity_high, i.affinity_median, i.affinity_low
FROM interaction i
JOIN object o ON i.object_id = o.object_id
JOIN ligand l ON i.ligand_id = l.ligand_id
WHERE o.name = 'TRPM3' AND i.type = 'Inhibition';

Expected SQL Results:
    ligand_id                       name  affinity affinity_units              type      action
0        2714                 diclofenac      5.20          pIC50   Channel blocker        None
1        2402                maprotiline      5.80          pIC50   Channel blocker        None
2        5338                  primidone      6.20          pIC50   Channel blocker        None
3        8899  (<i>S</i>)-liquiritigenin      5.20          pIC50   Channel blocker        None
4       10298                 naringenin      5.20          pIC50   Channel blocker        None
5         708            Mg<sup>2+</sup>      2.00          pIC50   Channel blocker  Antagonist
6        2433                      2-APB      4.00          pIC50  Gating inhibitor  Antagonist
7        2426            Gd<sup>3+</sup>      4.00          pIC50   Channel blocker  Antagonist
8        2434            La<sup>3+</sup>      4.00          pIC50   Channel blocker  Antagonist
9        2401                  halothane      3.28          pIC50   Channel blocker  Antagonist
10       2503                 chloroform      3.78          pIC50   Channel blocker  Antagonist
11      10299             isosakuranetin      7.30          pIC50   Channel blocker        None

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, ligand_name, affinity_units, affinity_high, affinity_median, affinity_low]
Index: []

--- Processing Test Case 47 ---
Natural Language Query: Find SMILES and InChiKey for alitretinoin
Expected SQL: select ls.isomeric_smiles, ls.isomeric_standard_inchi_key from ligand_structure ls, ligand l where ls.ligand_id = l.ligand_id and l.name = 'alitretinoin';
Generated SQL: SELECT ls.isomeric_smiles, ls.isomeric_standard_inchi_key
FROM ligand_structure ls
JOIN ligand l ON ls.ligand_id = l.ligand_id
WHERE l.name = 'alitretinoin';

Expected SQL Results:
                                   isomeric_smiles  isomeric_standard_inchi_key
0  C/C(=C/C=C/C(=C/C(=O)O)/C)/C=C/C1=C(C)CCCC1(C)C  SHGAZHPCJJPHSC-ZVCIMWCZSA-N

Generated SQL Results:
                                   isomeric_smiles  isomeric_standard_inchi_key
0  C/C(=C/C=C/C(=C/C(=O)O)/C)/C=C/C1=C(C)CCCC1(C)C  SHGAZHPCJJPHSC-ZVCIMWCZSA-N

--- Processing Test Case 48 ---
Natural Language Query: Is there recommended background reading on endothelin receptors?
Expected SQL: select r.reference_id, r.title, r.article_title, r.year, r.pubmed_id, fr.key_ref from reference r, grac_further_reading fr where r.reference_id=fr.reference_id and fr.family_id in ((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%endothelin receptors%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%endothelin receptors%'));
Generated SQL: SELECT r.reference_id
FROM receptor_basic rb
JOIN further_reading fr ON rb.object_id = fr.object_id
WHERE rb.object_id IN (
    SELECT object_id
    FROM object
    WHERE name ILIKE '%endothelin receptor%'
);

Expected SQL Results:
    reference_id                                   title  ... pubmed_id  key_ref
0          43561                      J Mol Cell Cardiol  ...  35339512    False
1          13988                 Int J Biochem Cell Biol  ...  18325824    False
2          28243                     Handb Exp Pharmacol  ...  24092342     True
3          21893                                Life Sci  ...  22884806    False
4          21894                                Life Sci  ...  22846215    False
5           3083                           Pharmacol Rev  ...  12037137     True
6          36073                             Physiol Res  ...  29947527     True
7          14942                           Pflugers Arch  ...  19967386    False
8          21895                            Hypertension  ...  23608655    False
9          28246                           Semin Nephrol  ...  25966344    False
10         28244                                Life Sci  ...  22967485    False
11          3096              Annu Rev Pharmacol Toxicol  ...  17002597    False
12         21890                           Pharmacol Res  ...  21352917    False
13         14940                             Physiol Rev  ...  21248162    False
14         21891                          Br J Pharmacol  ...  22670597    False
15         21892                          Br J Pharmacol  ...  22118774    False
16         14941  Am J Physiol Regul Integr Comp Physiol  ...  20237301    False
17         13995                   Trends Cardiovasc Med  ...  19232951    False
18         28245                          Br J Pharmacol  ...  25131455     True
19         32140                           Pharmacol Rev  ...  26956245     True
20         45083                         Nat Rev Cardiol  ...  30867577     True
21         45084                            Reproduction  ...  35167488     True
22         45085                   J Exp Clin Cancer Res  ...  33422090     True

[23 rows x 6 columns]

Generated SQL Results:
Error executing generated SQL.

--- Processing Test Case 49 ---
Natural Language Query: Find apelin ligands that are radiolabelled together with their pKDs.
Expected SQL: select l.ligand_id, l.name, l.radioactive, case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low else i.affinity_high end else i.affinity_median end as affinity, i.affinity_units from ligand l, interaction i where i.object_id in (select object_id from object where object_id in (select object_id from receptor2family where family_id in (select family_id from family where name ilike '%apelin%')) union select object_id from object where name ilike '%apelin%') and l.ligand_id=i.ligand_id and l.radioactive is true;
Generated SQL: SELECT 
    l.name AS ligand_name,
    i.affinity_median AS pKD
FROM 
    ligand l
JOIN 
    interaction i ON l.ligand_id = i.ligand_id
WHERE 
    l.name LIKE '%apelin%' AND l.radioactive = TRUE AND i.affinity_units = 'pKD';

Expected SQL Results:
   ligand_id                                               name  radioactive  affinity affinity_units
0        601        [<sup>125</sup>I](Pyr<sup>1</sup>)apelin-13         True       9.5            pKd
1        604  [<sup>3</sup>H](Pyr<sup>1</sup>)[Met(0)11]-ape...         True       8.6            pKd
2        602                         [<sup>125</sup>I]apelin-13         True       9.2            pKd
3       3761  [<sup>125</sup>I][Glp<sup>65</sup>Nle<sup>75</...         True      10.7            pKd
4        603  [<sup>125</sup>I][Nle<sup>75</sup>,Tyr<sup>77<...         True      11.2            pKd

Generated SQL Results:
Empty DataFrame
Columns: [ligand_name, pkd]
Index: []

--- Processing Test Case 50 ---
Natural Language Query: Find natural products ligands, that meet lipinski rule-of-5 and have SMILES
Expected SQL: select l.ligand_id, l.name, l.type, ls.isomeric_smiles from ligand l, ligand_physchem lp, ligand_structure ls where l.ligand_id=lp.ligand_id and lp.lipinski_s_rule_of_five = 0 and l.type = 'Natural product' and l.ligand_id=ls.ligand_id;
Generated SQL: SELECT l.ligand_id, l.name, l.approved, lp.hydrogen_bond_donors, lp.hydrogen_bond_acceptors,
       lp.molecular_weight, lp.xlogp, ls.isomeric_smiles
FROM ligand l
JOIN ligand_physchem lp ON lp.ligand_id = l.ligand_id
JOIN ligand_structure ls ON ls.ligand_id = l.ligand_id
WHERE lp.hydrogen_bond_donors <= 5
  AND lp.hydrogen_bond_acceptors <= 10
  AND lp.molecular_weight < 500
  AND lp.xlogp < 5
  AND ls.isomeric_smiles IS NOT NULL
  AND l.approved IS FALSE;

Expected SQL Results:
     ligand_id  ...                                    isomeric_smiles
0        12130  ...  Cc1ccc([nH]1)C(=O)O[C@H]1[C@H]([C@@H](OC([C@@H...
1        12129  ...  Cc1ccc([nH]1)C(=O)O[C@@H]1[C@@H]([C@H](C(O[C@H...
2        12128  ...  Cc1ccc([nH]1)C(=O)O[C@H]1[C@H]([C@@H](OC([C@@H...
3        12021  ...  Cc1c(ccc2c1oc(=O)c(c2O)NC(=O)c1cc(c(cc1)O)CC=C...
4        11377  ...               COc1c(O)cc(c2c1n(C)c1c(c2=O)cccc1O)O
..         ...  ...                                                ...
216      13283  ...                             CC1=C(C(CC=C1)(C)C)C=O
217      13327  ...  COC1=C(C(=C(C(=C1)O)CC2=CC=CC=C2O)O)C(=O)CCC3=...
218      13363  ...  C=C[C@H]1CN2CC[C@H]1C[C@@H]2[C@H](C3=CC=NC4=CC...
219      13376  ...         COC1=CC(=CC(=C1OC)OC)/C=C/C(=O)N2CCC=CC2=O
220      13407  ...     CCCCCC1=CC(O)=C(C/C=C(\C)/CCC(O)C(C)=C)C(O)=C1

[221 rows x 4 columns]

Generated SQL Results:
      ligand_id  ...                                    isomeric_smiles
0          1058  ...                                            CC(=O)O
1          1640  ...  Oc1ccc2c3c1O[C@@H]1[C@@]43CCN([C@H](C2)[C@]4(O...
2          6277  ...                                               CC=O
3           427  ...                   CCCn1c(=O)n(CCC)c2c(c1=O)[nH]cn2
4          3442  ...             Clc1ccc(cc1C(=O)Nc1ccccc1)[N+](=O)[O-]
...         ...  ...                                                ...
5091      11833  ...    O=C1c2ccc(c3cc4cc[nH]c4nc3)cc2OCCN1Cc1ccc(F)cc1
5092      11830  ...  C([2H])([2H])([2H])NC(=O)c1nccc(c1)Oc1ccc(cc1)...
5093      12637  ...               COC1=CC=C(C=C1F)C2=NOC(CNC(=O)C=C)C2
5094      12772  ...  CC(=O)NC[C@H]1CN(C(=O)O1)C2=CC(=C(C=C2)N3CCSCC3)F
5095      12923  ...  CS(=O)(=O)C1=CC=C(C=C1)[C@H]([C@@H](CF)NC(=O)C...

[5096 rows x 8 columns]

--- Processing Test Case 51 ---
Natural Language Query: What are the affinity values for SLC29 family inhibitors?
Expected SQL: select o.object_id, o.name as name, i.ligand_id, l.name, i.affinity_units, case when i.affinity_median is null then case when i.affinity_high is null then i.affinity_low else i.affinity_high end else i.affinity_median end as affinity from object o, interaction i, ligand l where o.object_id in (select object_id from receptor2family where family_id in ((WITH RECURSIVE subfamilies AS ( SELECT group_id, family_id from grouping where group_id in (select family_id from family where name ilike '%SLC29 family%') UNION SELECT e.group_id, e.family_id from grouping e INNER JOIN subfamilies s ON s.family_id=e.group_id) SELECT family_id FROM subfamilies order by family_id) union select family_id from family where family_id in (select family_id from family where name ilike '%SLC29 family%'))) and o.object_id=i.object_id and ((i.affinity_units is not null and i.affinity_units != '-' and i.affinity_units != '') or (i.concentration_range is not null and i.concentration_range != '-' and i.concentration_range != '')) and i.ligand_id=l.ligand_id;
Generated SQL: SELECT 
    i.ligand_id,
    i.object_id,
    i.affinity_units,
    i.affinity_high,
    i.affinity_median,
    i.affinity_low
FROM 
    interaction i
JOIN 
    receptor2family rf ON i.object_id = rf.object_id
JOIN 
    family f ON rf.family_id = f.family_id
WHERE 
    f.name ILIKE 'SLC29%' 
    AND i.type = 'inhibitor';

Expected SQL Results:
    object_id                                    name  ...  affinity_units affinity
0        1120   Plasma membrane monoamine transporter  ...             pKi     5.90
1        1120   Plasma membrane monoamine transporter  ...             pKi     4.64
2        1120   Plasma membrane monoamine transporter  ...             pKi     4.49
3        1120   Plasma membrane monoamine transporter  ...             pKi     7.00
4        1117  Equilibrative nucleoside transporter 1  ...             pKi     7.30
5        1117  Equilibrative nucleoside transporter 1  ...             pKd     9.30
6        1120   Plasma membrane monoamine transporter  ...             pKi     3.30
7        1120   Plasma membrane monoamine transporter  ...             pKi     4.73
8        1120   Plasma membrane monoamine transporter  ...             pKi     4.60
9        1120   Plasma membrane monoamine transporter  ...             pKi     4.57
10       1120   Plasma membrane monoamine transporter  ...             pKi     5.99
11       1117  Equilibrative nucleoside transporter 1  ...             pKi     9.40
12       1117  Equilibrative nucleoside transporter 1  ...             pKi     9.00
13       1117  Equilibrative nucleoside transporter 1  ...             pKi     8.80
14       1117  Equilibrative nucleoside transporter 1  ...             pKi     9.60
15       1117  Equilibrative nucleoside transporter 1  ...             pKi     9.30
16       1117  Equilibrative nucleoside transporter 1  ...             pKi     9.70

[17 rows x 6 columns]

Generated SQL Results:
Empty DataFrame
Columns: [ligand_id, object_id, affinity_units, affinity_high, affinity_median, affinity_low]
Index: []
==================================================
Total test queries executed: 26
Successful test queries: 10
None count: 6
None IDs: 65, 2, 6, 14, 81, 50
Empty count: 10
Empty IDs: 26, 71, 41, 11, 18, 52, 57, 58, 29, 63
==================================================
